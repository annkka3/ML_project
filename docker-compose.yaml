version: "3.8"

services:
  database:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    healthcheck:
      test:
        - CMD
        - pg_isready
        - "-U"
        - "${POSTGRES_USER}"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ml_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ml-network

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    restart: unless-stopped
    healthcheck:
      test:
        - CMD
        - rabbitmq-diagnostics
        - check_port_connectivity
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ml-network

  app:
    build:
      context: ./app
    image: ml-api:1.0
    container_name: ml-api-2
    restart: unless-stopped
    env_file:
      - ./app/.env
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./app:/app
    ports:
      - "8080:8080"
    healthcheck:
      test:
        - CMD-SHELL
        - curl -f http://localhost:8080/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    command: >
      uvicorn main:app --host 0.0.0.0 --port 8080
    networks:
      - ml-network

  telegram-bot:
    build:
      context: ./bot
    container_name: telegram-bot
    restart: unless-stopped
    env_file:
      - ./bot/.env
    depends_on:
      app:
        condition: service_healthy
    volumes:
      - ./bot:/bot
    networks:
      - ml-network
    command: >
      python bot.py

  nginx:
    image: nginx:1.25
    container_name: ml-nginx-2
    restart: unless-stopped
    depends_on:
      app:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - ml-network

networks:
  ml-network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
